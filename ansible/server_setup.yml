---

- hosts: master
  become: true
  become_user: root
  tasks:

  # Install Docker and its dependent components.
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version of docker
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add ubuntu user to docker group
    user:
      name: ubuntu
      group: docker
  
  - name: Restart docker
    service:
      name: docker
      enabled: yes
      daemon_reload: yes
      state: restarted 

  - name: Add an apt signing key for PostGre
    apt_key:
      url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
      state: present

  - name: Add apt repository for stable version of PostGre
    apt_repository:
      repo: deb http://apt.postgresql.org/pub/repos/apt bionic-pgdg main
      state: present

  - name: Install Postgre
    apt:
      name: postgresql-14
      state: present
      update_cache: yes
    notify:
      - postgre status  

  - name: Install psycopg2
    apt: 
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - python3-psycopg2
      - acl #need for become user postgre

  - name: create test database
    community.postgresql.postgresql_db:
      name: pr9testdb
    become: yes
    become_user: postgres

  - name: create a testuser
    community.postgresql.postgresql_user:
      db: pr9testdb
      name: pr9testuser
      password: md57c12772809c1c0c3deda6103b10fdfa0
      priv: "ALL"   
    become: yes
    become_user: postgres


  

    #Setup a handler for checking Docker daemon using the below code.
  handlers:
    - name: docker status
      service: name=docker state=started

    - name: postgre status
      service: name=postgresql state=started
